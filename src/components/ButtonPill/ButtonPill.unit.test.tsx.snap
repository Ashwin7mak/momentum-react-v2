// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<ButtonPill /> snapshot should match snapshot 1`] = `
<ButtonPill>
  <button
    className="md-button-pill-wrapper"
    data-color="primary"
    data-disabled={false}
    data-ghost={false}
    data-outline={false}
    data-size={1}
    onClick={[Function]}
    onDragStart={[Function]}
    onKeyDown={[Function]}
    onKeyUp={[Function]}
    onMouseDown={[Function]}
    onMouseEnter={[Function]}
    onMouseLeave={[Function]}
    onMouseUp={[Function]}
    onTouchCancel={[Function]}
    onTouchEnd={[Function]}
    onTouchMove={[Function]}
    onTouchStart={[Function]}
    type="button"
  >
    <div>
      Example Text
    </div>
  </button>
</ButtonPill>
`;

exports[`<ButtonPill /> snapshot should match snapshot when a ghost 1`] = `
<ButtonPill
  ghost={true}
>
  <button
    className="md-button-pill-wrapper"
    data-color="primary"
    data-disabled={false}
    data-ghost={true}
    data-outline={false}
    data-size={1}
    onClick={[Function]}
    onDragStart={[Function]}
    onKeyDown={[Function]}
    onKeyUp={[Function]}
    onMouseDown={[Function]}
    onMouseEnter={[Function]}
    onMouseLeave={[Function]}
    onMouseUp={[Function]}
    onTouchCancel={[Function]}
    onTouchEnd={[Function]}
    onTouchMove={[Function]}
    onTouchStart={[Function]}
    type="button"
  >
    <div>
      Example Text
    </div>
  </button>
</ButtonPill>
`;

exports[`<ButtonPill /> snapshot should match snapshot when a ghost and disabled 1`] = `
<ButtonPill
  disabled={true}
  ghost={true}
>
  <button
    className="md-button-pill-wrapper"
    data-color="primary"
    data-disabled={true}
    data-ghost={true}
    data-outline={false}
    data-size={1}
    onClick={[Function]}
    onDragStart={[Function]}
    onKeyDown={[Function]}
    onKeyUp={[Function]}
    onMouseDown={[Function]}
    onMouseEnter={[Function]}
    onMouseLeave={[Function]}
    onMouseUp={[Function]}
    onTouchCancel={[Function]}
    onTouchEnd={[Function]}
    onTouchMove={[Function]}
    onTouchStart={[Function]}
    type="button"
  >
    <div>
      Example Text
    </div>
  </button>
</ButtonPill>
`;

exports[`<ButtonPill /> snapshot should match snapshot when color is outlined 1`] = `
<ButtonPill
  outline={true}
>
  <button
    className="md-button-pill-wrapper"
    data-color="primary"
    data-disabled={false}
    data-ghost={false}
    data-outline={true}
    data-size={1}
    onClick={[Function]}
    onDragStart={[Function]}
    onKeyDown={[Function]}
    onKeyUp={[Function]}
    onMouseDown={[Function]}
    onMouseEnter={[Function]}
    onMouseLeave={[Function]}
    onMouseUp={[Function]}
    onTouchCancel={[Function]}
    onTouchEnd={[Function]}
    onTouchMove={[Function]}
    onTouchStart={[Function]}
    type="button"
  >
    <div>
      Example Text
    </div>
  </button>
</ButtonPill>
`;

exports[`<ButtonPill /> snapshot should match snapshot when disabled 1`] = `
<ButtonPill
  disabled={true}
>
  <button
    className="md-button-pill-wrapper"
    data-color="primary"
    data-disabled={true}
    data-ghost={false}
    data-outline={false}
    data-size={1}
    onClick={[Function]}
    onDragStart={[Function]}
    onKeyDown={[Function]}
    onKeyUp={[Function]}
    onMouseDown={[Function]}
    onMouseEnter={[Function]}
    onMouseLeave={[Function]}
    onMouseUp={[Function]}
    onTouchCancel={[Function]}
    onTouchEnd={[Function]}
    onTouchMove={[Function]}
    onTouchStart={[Function]}
    type="button"
  >
    <div>
      Example Text
    </div>
  </button>
</ButtonPill>
`;

exports[`<ButtonPill /> snapshot should match snapshot with color 1`] = `
<ButtonPill
  color="join"
>
  <button
    className="md-button-pill-wrapper"
    data-color="join"
    data-disabled={false}
    data-ghost={false}
    data-outline={false}
    data-size={1}
    onClick={[Function]}
    onDragStart={[Function]}
    onKeyDown={[Function]}
    onKeyUp={[Function]}
    onMouseDown={[Function]}
    onMouseEnter={[Function]}
    onMouseLeave={[Function]}
    onMouseUp={[Function]}
    onTouchCancel={[Function]}
    onTouchEnd={[Function]}
    onTouchMove={[Function]}
    onTouchStart={[Function]}
    type="button"
  >
    <div>
      Example Text
    </div>
  </button>
</ButtonPill>
`;
