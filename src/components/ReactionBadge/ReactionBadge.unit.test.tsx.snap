// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<ReactionBadge /> snapshot should match snapshot 1`] = `
<ReactionBadge>
  <ButtonPill
    className="md-reaction-badge-wrapper"
    data-count={1}
    data-reacted={false}
    forwardedRef={
      Object {
        "current": undefined,
      }
    }
    size={20}
  >
    <FocusRing>
      <FocusRing
        focusClass="md-focus-ring-wrapper children"
        focusRingClass="md-focus-ring-wrapper children"
      >
        <button
          className="md-button-pill-wrapper md-reaction-badge-wrapper"
          data-color="primary"
          data-count={1}
          data-disabled={false}
          data-ghost={false}
          data-outline={false}
          data-reacted={false}
          data-size={20}
          onBlur={[Function]}
          onClick={[Function]}
          onDragStart={[Function]}
          onFocus={[Function]}
          onKeyDown={[Function]}
          onKeyUp={[Function]}
          onMouseDown={[Function]}
          onMouseEnter={[Function]}
          onMouseLeave={[Function]}
          onMouseUp={[Function]}
          onTouchCancel={[Function]}
          onTouchEnd={[Function]}
          onTouchMove={[Function]}
          onTouchStart={[Function]}
          type="button"
        >
          <PrimitiveConverter>
            <Text
              type="body-primary"
            >
              <p
                className="md-text-wrapper"
                data-type="body-primary"
              />
            </Text>
          </PrimitiveConverter>
          <span />
        </button>
      </FocusRing>
    </FocusRing>
  </ButtonPill>
</ReactionBadge>
`;

exports[`<ReactionBadge /> snapshot should match snapshot with className 1`] = `
<ReactionBadge
  className="example-class"
>
  <ButtonPill
    className="example-class md-reaction-badge-wrapper"
    data-count={1}
    data-reacted={false}
    forwardedRef={
      Object {
        "current": undefined,
      }
    }
    size={20}
  >
    <FocusRing>
      <FocusRing
        focusClass="md-focus-ring-wrapper children"
        focusRingClass="md-focus-ring-wrapper children"
      >
        <button
          className="md-button-pill-wrapper example-class md-reaction-badge-wrapper"
          data-color="primary"
          data-count={1}
          data-disabled={false}
          data-ghost={false}
          data-outline={false}
          data-reacted={false}
          data-size={20}
          onBlur={[Function]}
          onClick={[Function]}
          onDragStart={[Function]}
          onFocus={[Function]}
          onKeyDown={[Function]}
          onKeyUp={[Function]}
          onMouseDown={[Function]}
          onMouseEnter={[Function]}
          onMouseLeave={[Function]}
          onMouseUp={[Function]}
          onTouchCancel={[Function]}
          onTouchEnd={[Function]}
          onTouchMove={[Function]}
          onTouchStart={[Function]}
          type="button"
        >
          <PrimitiveConverter>
            <Text
              type="body-primary"
            >
              <p
                className="md-text-wrapper"
                data-type="body-primary"
              />
            </Text>
          </PrimitiveConverter>
          <span />
        </button>
      </FocusRing>
    </FocusRing>
  </ButtonPill>
</ReactionBadge>
`;

exports[`<ReactionBadge /> snapshot should match snapshot with count 1`] = `
<ReactionBadge
  count={1}
>
  <ButtonPill
    className="md-reaction-badge-wrapper"
    data-count={1}
    data-reacted={false}
    forwardedRef={
      Object {
        "current": undefined,
      }
    }
    size={20}
  >
    <FocusRing>
      <FocusRing
        focusClass="md-focus-ring-wrapper children"
        focusRingClass="md-focus-ring-wrapper children"
      >
        <button
          className="md-button-pill-wrapper md-reaction-badge-wrapper"
          data-color="primary"
          data-count={1}
          data-disabled={false}
          data-ghost={false}
          data-outline={false}
          data-reacted={false}
          data-size={20}
          onBlur={[Function]}
          onClick={[Function]}
          onDragStart={[Function]}
          onFocus={[Function]}
          onKeyDown={[Function]}
          onKeyUp={[Function]}
          onMouseDown={[Function]}
          onMouseEnter={[Function]}
          onMouseLeave={[Function]}
          onMouseUp={[Function]}
          onTouchCancel={[Function]}
          onTouchEnd={[Function]}
          onTouchMove={[Function]}
          onTouchStart={[Function]}
          type="button"
        >
          <PrimitiveConverter>
            <Text
              type="body-primary"
            >
              <p
                className="md-text-wrapper"
                data-type="body-primary"
              />
            </Text>
          </PrimitiveConverter>
          <span>
            1
          </span>
        </button>
      </FocusRing>
    </FocusRing>
  </ButtonPill>
</ReactionBadge>
`;

exports[`<ReactionBadge /> snapshot should match snapshot with id 1`] = `
<ReactionBadge
  id="example-id"
>
  <ButtonPill
    className="md-reaction-badge-wrapper"
    data-count={1}
    data-reacted={false}
    forwardedRef={
      Object {
        "current": undefined,
      }
    }
    id="example-id"
    size={20}
  >
    <FocusRing>
      <FocusRing
        focusClass="md-focus-ring-wrapper children"
        focusRingClass="md-focus-ring-wrapper children"
      >
        <button
          className="md-button-pill-wrapper md-reaction-badge-wrapper"
          data-color="primary"
          data-count={1}
          data-disabled={false}
          data-ghost={false}
          data-outline={false}
          data-reacted={false}
          data-size={20}
          id="example-id"
          onBlur={[Function]}
          onClick={[Function]}
          onDragStart={[Function]}
          onFocus={[Function]}
          onKeyDown={[Function]}
          onKeyUp={[Function]}
          onMouseDown={[Function]}
          onMouseEnter={[Function]}
          onMouseLeave={[Function]}
          onMouseUp={[Function]}
          onTouchCancel={[Function]}
          onTouchEnd={[Function]}
          onTouchMove={[Function]}
          onTouchStart={[Function]}
          type="button"
        >
          <PrimitiveConverter>
            <Text
              type="body-primary"
            >
              <p
                className="md-text-wrapper"
                data-type="body-primary"
              />
            </Text>
          </PrimitiveConverter>
          <span />
        </button>
      </FocusRing>
    </FocusRing>
  </ButtonPill>
</ReactionBadge>
`;

exports[`<ReactionBadge /> snapshot should match snapshot with reacted 1`] = `
<ReactionBadge
  reacted={true}
>
  <ButtonPill
    className="md-reaction-badge-wrapper"
    data-count={1}
    data-reacted={true}
    forwardedRef={
      Object {
        "current": undefined,
      }
    }
    size={20}
  >
    <FocusRing>
      <FocusRing
        focusClass="md-focus-ring-wrapper children"
        focusRingClass="md-focus-ring-wrapper children"
      >
        <button
          className="md-button-pill-wrapper md-reaction-badge-wrapper"
          data-color="primary"
          data-count={1}
          data-disabled={false}
          data-ghost={false}
          data-outline={false}
          data-reacted={true}
          data-size={20}
          onBlur={[Function]}
          onClick={[Function]}
          onDragStart={[Function]}
          onFocus={[Function]}
          onKeyDown={[Function]}
          onKeyUp={[Function]}
          onMouseDown={[Function]}
          onMouseEnter={[Function]}
          onMouseLeave={[Function]}
          onMouseUp={[Function]}
          onTouchCancel={[Function]}
          onTouchEnd={[Function]}
          onTouchMove={[Function]}
          onTouchStart={[Function]}
          type="button"
        >
          <PrimitiveConverter>
            <Text
              type="body-primary"
            >
              <p
                className="md-text-wrapper"
                data-type="body-primary"
              />
            </Text>
          </PrimitiveConverter>
          <span />
        </button>
      </FocusRing>
    </FocusRing>
  </ButtonPill>
</ReactionBadge>
`;

exports[`<ReactionBadge /> snapshot should match snapshot with style 1`] = `
<ReactionBadge
  style={
    Object {
      "color": "pink",
    }
  }
>
  <ButtonPill
    className="md-reaction-badge-wrapper"
    data-count={1}
    data-reacted={false}
    forwardedRef={
      Object {
        "current": undefined,
      }
    }
    size={20}
    style={
      Object {
        "color": "pink",
      }
    }
  >
    <FocusRing>
      <FocusRing
        focusClass="md-focus-ring-wrapper children"
        focusRingClass="md-focus-ring-wrapper children"
      >
        <button
          className="md-button-pill-wrapper md-reaction-badge-wrapper"
          data-color="primary"
          data-count={1}
          data-disabled={false}
          data-ghost={false}
          data-outline={false}
          data-reacted={false}
          data-size={20}
          onBlur={[Function]}
          onClick={[Function]}
          onDragStart={[Function]}
          onFocus={[Function]}
          onKeyDown={[Function]}
          onKeyUp={[Function]}
          onMouseDown={[Function]}
          onMouseEnter={[Function]}
          onMouseLeave={[Function]}
          onMouseUp={[Function]}
          onTouchCancel={[Function]}
          onTouchEnd={[Function]}
          onTouchMove={[Function]}
          onTouchStart={[Function]}
          style={
            Object {
              "color": "pink",
            }
          }
          type="button"
        >
          <PrimitiveConverter>
            <Text
              type="body-primary"
            >
              <p
                className="md-text-wrapper"
                data-type="body-primary"
              />
            </Text>
          </PrimitiveConverter>
          <span />
        </button>
      </FocusRing>
    </FocusRing>
  </ButtonPill>
</ReactionBadge>
`;
